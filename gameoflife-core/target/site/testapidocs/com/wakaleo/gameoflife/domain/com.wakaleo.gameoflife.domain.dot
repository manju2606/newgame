#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	// com.wakaleo.gameoflife.domain.WhenYouReadAGridFromAString
	c0 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WhenYouReadAGridFromAString.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> WhenYouReadAGridFromAString </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  shouldBeAbleToReadAnEmptyGridOfCellsFromAnEmptyString() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadAGridContainingASingleCellFromAString() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadAGridOfCellsFromAString() </td></tr>
			<tr><td align="left">  shouldRefuseIllegalCellCharacters() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadAGridContainingLiveAndDeadCells() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadAnAsymetricalGridContainingLiveAndDeadCells() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadALargerGrid() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadAVeryLargerGrid() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// com.wakaleo.gameoflife.domain.WhenYouPrintAGrid
	c1 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WhenYouPrintAGrid.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> WhenYouPrintAGrid </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  shouldBeAbleToReadAGridOfCellsFromAString() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadAStringGridContainingLiveAndDeadCells() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadALargeStringGridContainingLiveAndDeadCells() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// com.wakaleo.gameoflife.domain.WhenYouPlayTheGameOfLife
	c2 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WhenYouPlayTheGameOfLife.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> WhenYouPlayTheGameOfLife </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  aDeadCellWithNoNeighboursShouldRemainDeadInTheNextGeneration() </td></tr>
			<tr><td align="left">  aDeadCellWithOneLiveNeighbourShouldRemainDeadInTheNextGeneration() </td></tr>
			<tr><td align="left">  liveCellaWith2or3iveNeighbourShouldRemainAliveInTheNextGeneration() </td></tr>
			<tr><td align="left">  aLiveCellWithExactlyTwoLiveNeighbourShouldRemainAliveInTheNextGeneration() </td></tr>
			<tr><td align="left">  aCellWithNoNeighboursShouldDieInTheNextGeneration() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// com.wakaleo.gameoflife.domain.WhenYouCreateANewUniverse
	c3 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WhenYouCreateANewUniverse.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> WhenYouCreateANewUniverse </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  EMPTY_GRID </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  aNewUniverseShouldContainOnlyDeadCells() </td></tr>
			<tr><td align="left">  aUniverseSeededWithAnEmpyGridContentWillContainAnEmptyGrid() </td></tr>
			<tr><td align="left">  aUniverseCanBeInitializedWithAnyDimension() </td></tr>
			<tr><td align="left">  aUniverseSeededWithAGridContainingASingleLiveCellContentWillSpawnAnEmptyGrid() </td></tr>
			<tr><td align="left">  aUniverseSeededWithAGridWithLivingCellsContentWillContainThatGrid() </td></tr>
			<tr><td align="left">  aUniverseSpawnsANewGridInTheNextGeneration() </td></tr>
			<tr><td align="left">  aUserCanAssignALiveCellAtAGivenPointInTheGrid() </td></tr>
			<tr><td align="left">  aUserCanAssignADeadCellAtAGivenPointInTheGrid() </td></tr>
			<tr><td align="left">  aUserCanReadALiveCellValueAtAGivenPointInTheGrid() </td></tr>
			<tr><td align="left">  aUserCanReadADeadCellValueAtAGivenPointInTheGrid() </td></tr>
			<tr><td align="left">  aUserCanObtainTheGridContentsAsAnArrayOfCells() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// com.wakaleo.gameoflife.domain.WhenYouCreateAGrid
	c4 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WhenYouCreateAGrid.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> WhenYouCreateAGrid </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  EMPTY_GRID </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  aNewGridShouldBeEmpty() </td></tr>
			<tr><td align="left">  shouldBeAbleToSeedAGridWithAString() </td></tr>
			<tr><td align="left">  shouldBeAbleToSeedAGridWithANonEmptyString() </td></tr>
			<tr><td align="left">  shouldBeAbleToCountLiveNeighboursOfACell() </td></tr>
			<tr><td align="left">  shouldBeAbleToCountLiveNeighboursOfACellOnBoundaries() </td></tr>
			<tr><td align="left">  shouldBeAbleToCountLiveNeighboursOfACellInTheMiddleOfTheGrid() </td></tr>
			<tr><td align="left">  shouldBeAbleToCountLiveNeighboursOfACellOnAnotherLine() </td></tr>
			<tr><td align="left">  shouldBeAbleToCountLiveNeighboursOfACellOnDiagonalsAndStraightLines() </td></tr>
			<tr><td align="left">  shouldNotCountTheTargetCellAsANeighbour() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadTheStateOfALivingCell() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadTheStateOfADeadCell() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadTheWidthOfTheGrid() </td></tr>
			<tr><td align="left">  shouldBeAbleToReadTheHeightOfTheGrid() </td></tr>
			<tr><td align="left">  shouldBeAbleToObtainTheGridContentsAsAnArray() </td></tr>
			<tr><td align="left">  theGridContentsAsAnArrayShouldBeTheCorrectSize() </td></tr>
			<tr><td align="left">  ModifyingTheGridContentsAsAnArrayShouldNotModifyTheOriginalContents() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// com.wakaleo.gameoflife.domain.WhenYouCreateACell
	c5 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WhenYouCreateACell.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> WhenYouCreateACell </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  aLiveCellShouldBeRepresentedByAnAsterisk() </td></tr>
			<tr><td align="left">  aDeadCellShouldBeRepresentedByADot() </td></tr>
			<tr><td align="left">  aLiveCellShouldBePrintedAsAnAsterisk() </td></tr>
			<tr><td align="left">  aDeadCellShouldBePrintedAsADot() </td></tr>
			<tr><td align="left">  aDeadCellSymbolShouldBeADot() </td></tr>
			<tr><td align="left">  aLiveCellSymbolShouldBeAnAsterisk() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
}

